# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Lint, test and coverage to coveralls
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test
        env:
          CI: true
      - name: Generate coverage report
        run: npm run coverage
        env:
          CI: true
#      - name: Coverage to Coveralls
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#        env:
#          CI: true
  npmReleaseDev:
    name: (Develop) Publish new release to npm registry
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' && github.event_name == 'push'}}
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: git config
        run: |
          git config user.name $GITHUB_ACTOR
          git config user.email gh-actions-${GITHUB_ACTOR}@github.com
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm version prerelease -m "Governify Commons version %s released"
      - run: npm install
      - run: npm publish
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: git push
  githubRelease:
    name: Release new version to GitHub
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push'}}
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Conventional Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: 'CHANGELOG.md'
          tag-prefix: 'v'
          release-count: 0
          package-json: './package.json'
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - name: Sync develop with main
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "main"
          destination_branch: "develop"
          pr_title: "Synchronize develop with master after release ${{ steps.changelog.outputs.tag }}"
          pr_body: ":crown:"
          pr_reviewer: "pafmon"
          pr_assignee: "alesancor1"
          pr_label: "auto-pr"                              
          github_token: ${{ secrets.GITHUB_TOKEN }}
  npmReleaseMain:
      name: (Main) Publish new release to npm registry
      needs: githubRelease
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            ref: 'main'
        - uses: actions/setup-node@v2
          with:
            node-version: '14.x'
            registry-url: 'https://registry.npmjs.org'
        - run: npm install
        - run: npm publish
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
